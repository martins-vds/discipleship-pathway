@using ChartJs.Blazor.RadarChart
@using ChartJs.Blazor.Util

@if (IsVisible && Results is not null)
{
    <MudText Typo="Typo.h2" Align="Align.Center" Class="mb-4">Assessment Results</MudText>
    <Chart Config="_chartConfig"></Chart>
}

@code {
    private RadarConfig? _chartConfig;

    [Parameter]
    public AssessmentResults? Results { get; set; }

    [Parameter]
    public bool IsVisible { get; set; }

    protected override void OnInitialized()
    {
        _chartConfig = GetChartConfig();
    }

    protected override void OnParametersSet()
    {
        if (Results is null)
        {
            return;
        }

        _chartConfig.Data.Labels.Clear();
        _chartConfig.Data.Datasets.Clear();

        var dataset = CreateDataset("You");
        var perfectDataset = CreatePerfectDataset("Disciple", Results.AverageBySection.Count);

        foreach (var sectionAverage in Results.AverageBySection)
        {
            _chartConfig.Data.Labels.Add(sectionAverage.Section);
            dataset.Add(sectionAverage.Average);
        }

        _chartConfig.Data.Datasets.Add(perfectDataset);
        _chartConfig.Data.Datasets.Add(dataset);
    }

    private RadarConfig GetChartConfig()
    {
        return new RadarConfig()
            {
                Options = new RadarOptions()
                {
                    Responsive = true,
                    Scale = new ChartJs.Blazor.Common.Axes.LinearRadialAxis()
                    {
                        Ticks = new ChartJs.Blazor.Common.Axes.Ticks.LinearRadialTicks()
                        {
                            BeginAtZero = true,
                            Max = 5,
                            Min = 0
                        }
                    }
                }
            };
    }

    private RadarDataset<double> CreateDataset(string label)
    {
        var dataset = new RadarDataset<double>();
        dataset.Label = label;
        dataset.BackgroundColor = "rgba(54, 162, 235, 0.2)";
        dataset.BorderColor = "rgb(54, 162, 235)";
        return dataset;
    }

    private RadarDataset<double> CreatePerfectDataset(string label, int sections){
        var dataset = new RadarDataset<double>(Enumerable.Repeat<double>(5, sections));
        dataset.Label = label;
        dataset.BackgroundColor = "rgba(255, 99, 132, 0.2)";
        dataset.BorderColor = "rgb(255, 99, 132)";
        return dataset;
    }
}
